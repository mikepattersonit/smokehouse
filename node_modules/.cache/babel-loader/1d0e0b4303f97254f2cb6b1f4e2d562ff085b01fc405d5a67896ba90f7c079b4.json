{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mpatterson\\\\Documents\\\\smokehouse\\\\smokehouse\\\\src\\\\components\\\\SensorDataTable\\\\SensorDataTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SensorDataTable() {\n  _s();\n  const [sensorData, setSensorData] = useState([]);\n  const [timestamp, setTimestamp] = useState(null);\n  useEffect(() => {\n    // Mock data generation for real-time updates\n    const interval = setInterval(() => {\n      const mockData = [{\n        id: 'internal_temp',\n        label: 'Internal Temp',\n        value: Math.random() * 100\n      }, {\n        id: 'sensor0',\n        label: 'Bottom Temp',\n        value: Math.random() * 100\n      }, {\n        id: 'sensor1',\n        label: 'Middle Temp',\n        value: Math.random() * 100\n      }, {\n        id: 'sensor2',\n        label: 'Top Temp',\n        value: Math.random() * 100\n      }, {\n        id: 'humidity',\n        label: 'Humidity (%)',\n        value: Math.random() * 100\n      }, {\n        id: 'smoke_ppm',\n        label: 'Smoke PPM',\n        value: Math.random() * 100\n      }];\n      setSensorData(mockData);\n      setTimestamp(new Date().toLocaleTimeString());\n    }, 2000);\n    return () => clearInterval(interval); // Cleanup on unmount\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Real-Time Sensor Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Last Updated: \", timestamp]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      style: {\n        margin: 'auto',\n        width: '80%',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sensor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sensorData.map(sensor => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: sensor.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: sensor.value.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)]\n        }, sensor.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(SensorDataTable, \"QFcyj2BaEA3RjzCl8YEIJb9iOvo=\");\n_c = SensorDataTable;\nexport default SensorDataTable;\nvar _c;\n$RefreshReg$(_c, \"SensorDataTable\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SensorDataTable","_s","sensorData","setSensorData","timestamp","setTimestamp","interval","setInterval","mockData","id","label","value","Math","random","Date","toLocaleTimeString","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","border","style","margin","width","textAlign","map","sensor","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/mpatterson/Documents/smokehouse/smokehouse/src/components/SensorDataTable/SensorDataTable.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction SensorDataTable() {\r\n  const [sensorData, setSensorData] = useState([]);\r\n  const [timestamp, setTimestamp] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Mock data generation for real-time updates\r\n    const interval = setInterval(() => {\r\n      const mockData = [\r\n        { id: 'internal_temp', label: 'Internal Temp', value: Math.random() * 100 },\r\n        { id: 'sensor0', label: 'Bottom Temp', value: Math.random() * 100 },\r\n        { id: 'sensor1', label: 'Middle Temp', value: Math.random() * 100 },\r\n        { id: 'sensor2', label: 'Top Temp', value: Math.random() * 100 },\r\n        { id: 'humidity', label: 'Humidity (%)', value: Math.random() * 100 },\r\n        { id: 'smoke_ppm', label: 'Smoke PPM', value: Math.random() * 100 },\r\n      ];\r\n      setSensorData(mockData);\r\n      setTimestamp(new Date().toLocaleTimeString());\r\n    }, 2000);\r\n\r\n    return () => clearInterval(interval); // Cleanup on unmount\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Real-Time Sensor Data</h2>\r\n      <p>Last Updated: {timestamp}</p>\r\n      <table border=\"1\" style={{ margin: 'auto', width: '80%', textAlign: 'center' }}>\r\n        <thead>\r\n          <tr>\r\n            <th>Sensor</th>\r\n            <th>Value</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {sensorData.map((sensor) => (\r\n            <tr key={sensor.id}>\r\n              <td>{sensor.label}</td>\r\n              <td>{sensor.value.toFixed(2)}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SensorDataTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}