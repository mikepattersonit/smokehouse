{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mpatterson\\\\Documents\\\\smokehouse\\\\smokehouse\\\\src\\\\components\\\\Chart\\\\Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Explicitly register components and scales\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Title, Tooltip, Legend);\nconst Chart = ({\n  data\n}) => {\n  _s();\n  // Extract sensor IDs dynamically from data\n  const sensorKeys = Object.keys(data[0] || {}).filter(key => key !== 'timestamp' && key !== 'session_id');\n  const [selectedSensors, setSelectedSensors] = useState(sensorKeys);\n  const chartData = {\n    labels: data.map(point => new Date(point.timestamp).toLocaleString()),\n    // X-axis: Time (formatted)\n    datasets: selectedSensors.map(sensor => ({\n      label: sensor.replace(/_/g, ' '),\n      // Format sensor name for display\n      data: data.map(point => point[sensor] || 0),\n      // Y-axis: Sensor Values\n      borderColor: `rgba(${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, 1)`,\n      // Unique color for each dataset\n      backgroundColor: 'rgba(0, 0, 0, 0)',\n      // Transparent fill\n      tension: 0.4\n    }))\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            return `${context.dataset.label}: ${context.raw}`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Time'\n        },\n        ticks: {\n          maxRotation: 45,\n          minRotation: 45\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Value'\n        },\n        beginAtZero: true\n      }\n    }\n  };\n  const handleSensorChange = e => {\n    const selectedOptions = Array.from(e.target.selectedOptions).map(option => option.value);\n    setSelectedSensors(selectedOptions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Historical Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"sensor-select\",\n      children: \"Select Sensors:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"sensor-select\",\n      multiple: true,\n      value: selectedSensors,\n      onChange: handleSensorChange,\n      style: {\n        margin: '10px',\n        height: '100px',\n        width: '200px'\n      },\n      children: sensorKeys.map(sensor => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: sensor,\n        children: [sensor.replace(/_/g, ' '), \" \"]\n      }, sensor, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Chart, \"ZyEUsSVpXKLcKOZl5SXBZlKmqso=\");\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","useState","Line","Chart","ChartJS","LineElement","CategoryScale","LinearScale","PointElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","data","_s","sensorKeys","Object","keys","filter","key","selectedSensors","setSelectedSensors","chartData","labels","map","point","Date","timestamp","toLocaleString","datasets","sensor","label","replace","borderColor","Math","floor","random","backgroundColor","tension","options","responsive","plugins","legend","position","tooltip","callbacks","context","dataset","raw","scales","x","title","display","text","ticks","maxRotation","minRotation","y","beginAtZero","handleSensorChange","e","selectedOptions","Array","from","target","option","value","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","multiple","onChange","style","margin","height","width","_c","$RefreshReg$"],"sources":["C:/Users/mpatterson/Documents/smokehouse/smokehouse/src/components/Chart/Chart.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  LineElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\n// Explicitly register components and scales\r\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Title, Tooltip, Legend);\r\n\r\nconst Chart = ({ data }) => {\r\n  // Extract sensor IDs dynamically from data\r\n  const sensorKeys = Object.keys(data[0] || {}).filter(\r\n    (key) => key !== 'timestamp' && key !== 'session_id'\r\n  );\r\n\r\n  const [selectedSensors, setSelectedSensors] = useState(sensorKeys);\r\n\r\n  const chartData = {\r\n    labels: data.map((point) => new Date(point.timestamp).toLocaleString()), // X-axis: Time (formatted)\r\n    datasets: selectedSensors.map((sensor) => ({\r\n      label: sensor.replace(/_/g, ' '), // Format sensor name for display\r\n      data: data.map((point) => point[sensor] || 0), // Y-axis: Sensor Values\r\n      borderColor: `rgba(${Math.floor(Math.random() * 255)}, ${Math.floor(\r\n        Math.random() * 255\r\n      )}, ${Math.floor(Math.random() * 255)}, 1)`, // Unique color for each dataset\r\n      backgroundColor: 'rgba(0, 0, 0, 0)', // Transparent fill\r\n      tension: 0.4,\r\n    })),\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function (context) {\r\n            return `${context.dataset.label}: ${context.raw}`;\r\n          },\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        title: { display: true, text: 'Time' },\r\n        ticks: {\r\n          maxRotation: 45,\r\n          minRotation: 45,\r\n        },\r\n      },\r\n      y: {\r\n        title: { display: true, text: 'Value' },\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  const handleSensorChange = (e) => {\r\n    const selectedOptions = Array.from(e.target.selectedOptions).map(\r\n      (option) => option.value\r\n    );\r\n    setSelectedSensors(selectedOptions);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Historical Data</h2>\r\n      <label htmlFor=\"sensor-select\">Select Sensors:</label>\r\n      <select\r\n        id=\"sensor-select\"\r\n        multiple\r\n        value={selectedSensors}\r\n        onChange={handleSensorChange}\r\n        style={{ margin: '10px', height: '100px', width: '200px' }}\r\n      >\r\n        {sensorKeys.map((sensor) => (\r\n          <option key={sensor} value={sensor}>\r\n            {sensor.replace(/_/g, ' ')} {/* Display friendly names */}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <Line data={chartData} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}