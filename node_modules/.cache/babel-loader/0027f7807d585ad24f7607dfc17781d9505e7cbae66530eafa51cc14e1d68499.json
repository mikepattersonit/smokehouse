{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mpatterson\\\\Documents\\\\smokehouse\\\\smokehouse\\\\src\\\\components\\\\Chart\\\\Chart.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Explicitly register components and scales\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Title, Tooltip, Legend);\nconst Chart = ({\n  data\n}) => {\n  // Ensure the data has the correct structure and handle missing values gracefully\n  const chartData = {\n    labels: data.map(point => new Date(point.timestamp).toLocaleString()),\n    // X-axis: Time (formatted)\n    datasets: [{\n      label: 'Internal Temp',\n      data: data.map(point => point.internal_temp || 0),\n      // Y-axis: Internal Temp\n      borderColor: 'rgba(75,192,192,1)',\n      backgroundColor: 'rgba(75,192,192,0.2)',\n      tension: 0.4\n    }, {\n      label: 'Top Temp',\n      data: data.map(point => point.top_temp || 0),\n      // Y-axis: Top Temp\n      borderColor: 'rgba(255,99,132,1)',\n      backgroundColor: 'rgba(255,99,132,0.2)',\n      tension: 0.4\n    }, {\n      label: 'Bottom Temp',\n      data: data.map(point => point.bottom_temp || 0),\n      // Y-axis: Bottom Temp\n      borderColor: 'rgba(54,162,235,1)',\n      backgroundColor: 'rgba(54,162,235,0.2)',\n      tension: 0.4\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            return `${context.dataset.label}: ${context.raw}`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Time'\n        },\n        ticks: {\n          maxRotation: 45,\n          minRotation: 45\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Value'\n        },\n        beginAtZero: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Historical Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","Line","Chart","ChartJS","LineElement","CategoryScale","LinearScale","PointElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","data","chartData","labels","map","point","Date","timestamp","toLocaleString","datasets","label","internal_temp","borderColor","backgroundColor","tension","top_temp","bottom_temp","options","responsive","plugins","legend","position","tooltip","callbacks","context","dataset","raw","scales","x","title","display","text","ticks","maxRotation","minRotation","y","beginAtZero","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mpatterson/Documents/smokehouse/smokehouse/src/components/Chart/Chart.js"],"sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  LineElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\n// Explicitly register components and scales\r\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Title, Tooltip, Legend);\r\n\r\nconst Chart = ({ data }) => {\r\n  // Ensure the data has the correct structure and handle missing values gracefully\r\n  const chartData = {\r\n    labels: data.map((point) => new Date(point.timestamp).toLocaleString()), // X-axis: Time (formatted)\r\n    datasets: [\r\n      {\r\n        label: 'Internal Temp',\r\n        data: data.map((point) => point.internal_temp || 0), // Y-axis: Internal Temp\r\n        borderColor: 'rgba(75,192,192,1)',\r\n        backgroundColor: 'rgba(75,192,192,0.2)',\r\n        tension: 0.4,\r\n      },\r\n      {\r\n        label: 'Top Temp',\r\n        data: data.map((point) => point.top_temp || 0), // Y-axis: Top Temp\r\n        borderColor: 'rgba(255,99,132,1)',\r\n        backgroundColor: 'rgba(255,99,132,0.2)',\r\n        tension: 0.4,\r\n      },\r\n      {\r\n        label: 'Bottom Temp',\r\n        data: data.map((point) => point.bottom_temp || 0), // Y-axis: Bottom Temp\r\n        borderColor: 'rgba(54,162,235,1)',\r\n        backgroundColor: 'rgba(54,162,235,0.2)',\r\n        tension: 0.4,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function (context) {\r\n            return `${context.dataset.label}: ${context.raw}`;\r\n          },\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        title: { display: true, text: 'Time' },\r\n        ticks: {\r\n          maxRotation: 45,\r\n          minRotation: 45,\r\n        },\r\n      },\r\n      y: {\r\n        title: { display: true, text: 'Value' },\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Historical Data</h2>\r\n      <Line data={chartData} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}